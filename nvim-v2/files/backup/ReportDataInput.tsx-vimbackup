import { defineComponent, PropType, watch } from 'vue';
import './style.scss';
import { useReportStore } from 'stores/report';
import { TemplateRouteName } from 'enums/report';
import { useReportDataInputStore } from 'stores/report/data-input';
import { ReportDataRightSide, ReportDataLeftSide } from './elements';

export default defineComponent({
  name: 'ReportDataInput',
  setup({ redirectToPageName }) {
    const report = useReportStore();
    const dataInput = useReportDataInputStore();

    watch(
      [
        () => report.UI.isSaveAndExit,
        () => report.UI.isNextStep,
        () => report.UI.isBackStep,
        () => report.UI.isChangedStep,
        () => report.UI.isMoveNextDisclosure,
      ],
      async (values) => {
        try {
          // TODO: Handle save data
          handleRedirectPage(values);
        } catch (e) {
          //
        } finally {
          //
        }
      },
    );

    const handleRedirectPage = (args: boolean[]) => {
      const [
        isSaveAndExit,
        isNextStep,
        isBackStep,
        isChangedStep,
        isMoveNextDisclosure,
      ] = args;
      // TODO: Handle save data
      if (isSaveAndExit) {
        // TODO: Redirect to home page
        // redirectToPageName();
      } else if (isNextStep) {
        redirectToPageName(TemplateRouteName.Design);
      } else if (isBackStep) {
        redirectToPageName(TemplateRouteName.Description);
      } else if (isChangedStep) {
        // TODO: Handle step changed
      } else if (isMoveNextDisclosure) {
        dataInput.moveNextNodeTree();
      }
    };

    return (): JSX.Element => (
      <el-row class="data-input" justify="space-around">
        <el-col span={10}>
          <ReportDataLeftSide />
        </el-col>
        <el-col span={14} class="data-input-right">
          <ReportDataRightSide />
        </el-col>
      </el-row>
    );
  },
  props: {
    redirectToPageName: {
      type: Function as PropType<(pageName: string) => void>,
      required: true,
    },
  },
});
